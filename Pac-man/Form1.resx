<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhgACAAKIEAAAA2QAAAP8AAP//AP///wAAAAAAAAAAACH/C05FVFNDQVBFMi4wAwEAAAAh/wtY
        TVAgRGF0YVhNUDw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlk
        Ij8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBD
        b3JlIDUuMy1jMDExIDY2LjE0NTY2MSwgMjAxMi8wMi8wNi0xNDo1NjoyNyAgICAgICAgIj4gPHJkZjpS
        REYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4g
        PHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29t
        L3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1s
        bnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHht
        cDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNiAoV2luZG93cykiIHhtcE1NOkluc3RhbmNl
        SUQ9InhtcC5paWQ6MDQ3OUQ3OTgwQTNFMTFFN0IwMDNBRkVFNzk5NURFOUYiIHhtcE1NOkRvY3VtZW50
        SUQ9InhtcC5kaWQ6MDQ3OUQ3OTkwQTNFMTFFN0IwMDNBRkVFNzk5NURFOUYiPiA8eG1wTU06RGVyaXZl
        ZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDowNDc5RDc5NjBBM0UxMUU3QjAwM0FGRUU3OTk1
        REU5RiIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDowNDc5RDc5NzBBM0UxMUU3QjAwM0FGRUU3OTk1
        REU5RiIvPiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gPD94cGFja2V0
        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
        6OOPQAbpSAIAOw==
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>49</value>
  </metadata>
</root>